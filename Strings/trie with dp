vi dp(M,0);
string x;
struct Node{
    Node *nxt[27];
    ll cnt;
    bool isleaf;
    Node(){
        memset(nxt,0,sizeof nxt);
        cnt=0;
        isleaf= false;
    }
}*head;
void insert(string &s) {
    Node *cur = head;
    for (int i = 0; i < s.size(); ++i) {
        if (!cur->nxt[s[i] - 'a']) {
            cur->nxt[s[i] - 'a'] = new Node();
        }
        cur = cur->nxt[s[i] - 'a'];
        cur->cnt++;
    }
    cur->isleaf = true;
}
ll serch(ll inx) {
    ll ans = 0;
    Node *cur = head;
    for (int i = inx; i < x.size(); ++i) {
        if (!cur->nxt[x[i] - 'a']) {
            cur->nxt[x[i] - 'a'] = new Node();
            return ans;
        }
        cur = cur->nxt[x[i] - 'a'];
        if (cur->isleaf) {
           ans= add(ans,dp[i+1]);
        }
    }
    return ans;
}
 
 
void solve() {
  head=new Node();
    cin >> x;
    ll q;
    cin >> q;
    for (int i = 0; i < q; ++i) {
        string y;
        cin >> y;
        insert(y);
    }
    dp[x.size()] = 1;
    for (int i = x.size()-1; i >= 0; --i) {
        dp[i] = serch(i);
    }
    cout << dp[0] << endl;
}
