
ll C(ll l,ll r) {
    return (a[r] - a[l - 1]);
}
void d_and_c(ll l,ll r,ll x,ll y) {
    if (r < l)return;
    ll md = (l + r) / 2;
    pi bst = {oo, -1};
    for (int i = x; i <= min(md, y); ++i) {
        bst = min(bst, {lst[i] + C(i + 1, md), i});
    }
    dp[md] = bst.first;
    d_and_c(l, md - 1, x, bst.second);
    d_and_c(md+1, r, bst.second, y);
}

void solve() {

    int n, k;
    cin >> n >> k;
    a = dp = vi(n + 1);
    for (int i = 1; i <= n; i++) {
        cin >> a[i];
        a[i] += a[i - 1];
    }
    lst = vi(n + 1, oo);
    lst[0] = 0;
    for (int i = 1; i <= k; i++) {
        d_and_c(1, n, 0, n);
        lst = dp;
    }
    cout << dp[n] << " ";
}
